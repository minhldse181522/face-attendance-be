model Payroll {
  id BigInt @id @default(autoincrement())

  code           String    @unique @map("code") @db.VarChar(50)
  userCode       String    @map("user_code") @db.VarChar(50)
  month          String    @map("month") @db.VarChar(5)
  baseSalary     Float     @map("base_salary") @db.DoublePrecision
  actualSalary   Float?    @map("actual_salary") @db.DoublePrecision
  totalWorkHour  Float?    @map("total_work_hour") @db.DoublePrecision
  status         String?   @map("status") @db.VarChar(20)
  paidDate       DateTime? @map("paid_date") @db.Timestamptz(3)
  deductionFee   Float?    @map("deduction_fee") @db.DoublePrecision
  workDay        Int       @map("work_day") @db.Integer
  allowance      Float     @map("allowance") @db.DoublePrecision
  overtimeSalary Float     @map("overtime_salary") @db.DoublePrecision
  salaryOvertime Float?    @map("salary_overtime") @db.DoublePrecision
  lateFine       Float     @map("late_fine") @db.DoublePrecision
  lateTimeCount  Int?      @map("late_time_count") @db.Integer
  otherFee       Float?    @map("other_fee") @db.DoublePrecision
  totalSalary    Float     @map("total_salary") @db.DoublePrecision
  
  createdAt DateTime? @default(now()) @map("created_date") @db.Timestamptz(3)
  createdBy String    @map("created_by") @db.VarChar(36)
  updatedAt DateTime? @updatedAt @map("modified_date") @db.Timestamptz(3)
  updatedBy String?   @map("modified_by") @db.VarChar(36)

  user      User    @relation(fields: [userCode], references: [code], onUpdate: Cascade)

  @@map("dt_payroll")
}
